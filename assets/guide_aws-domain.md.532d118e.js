import{_ as e,c as a,a as l,d as r,w as s,e as t,b as i,r as o,o as n}from"./app.7bd26314.js";const p='{"title":"도메인 연결하기","description":"","frontmatter":{"head":[["meta",{"property":"og:description","content":"도메인 연결하고 SSL 인증서 적용하기"}],["meta",{"property":"twitter:description","content":"도메인 연결하고 SSL 인증서 적용하기"}]]},"headers":[{"level":2,"title":"도메인 발급","slug":"도메인-발급"},{"level":2,"title":"DNS 등록","slug":"dns-등록"},{"level":2,"title":"HTTPS","slug":"https"},{"level":2,"title":"AWS Certificate Manager","slug":"aws-certificate-manager"},{"level":2,"title":"ALB 인증서 추가하기","slug":"alb-인증서-추가하기"},{"level":2,"title":"마무리","slug":"마무리"}],"relativePath":"guide/aws-domain.md"}',c={},d=t('<h1 id="도메인-연결하기" tabindex="-1">도메인 연결하기 <a class="header-anchor" href="#도메인-연결하기" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">⚡️ 목표</p><p>✅ Cloudflare을 이용하여 도메인을 설정합니다.<br> ✅ HTTP와 HTTPS 차이를 이해합니다.<br> ✅ AWS Certificate Manager를 이용하여 인증서를 발급합니다.<br> ✅ ALB에 SSL 인증서를 등록합니다.</p></div><p><div class="table-of-contents"><ul><li><a href="#도메인-발급">도메인 발급</a></li><li><a href="#dns-등록">DNS 등록</a></li><li><a href="#https">HTTPS</a></li><li><a href="#aws-certificate-manager">AWS Certificate Manager</a></li><li><a href="#alb-인증서-추가하기">ALB 인증서 추가하기</a></li><li><a href="#마무리">마무리</a></li></ul></div></p><p><code>Awesome API</code>는 ALB 주소 <code>http://awesome-api-lb-0123456789.ap-northeast-2.elb.amazonaws.com/</code> 그대로 서비스 중입니다. 아무래도 긴 도메인은 기억하기 어렵고 나중에 ALB를 변경하면 주소가 변경되어 문제가 생기니 별도 도메인을 사용하기로 했습니다.</p><p>도메인을 발급하고 DNS에 연결한 다음, ALB 주소를 바라보게 설정하면 끝입니다. <s>참 쉽죠?</s></p><h2 id="도메인-발급" tabindex="-1">도메인 발급 <a class="header-anchor" href="#도메인-발급" aria-hidden="true">#</a></h2><p>유료로 도메인을 구입하거나 <a href="https://www.freenom.com/" target="_blank" rel="noopener noreferrer">freenom</a>에서 무료로 도메인을 발급합니다.</p><ol><li>원하는 주소를 입력하고 검색합니다.</li></ol>',8),m={class:"image-550"},u=l("ol",{start:"2"},[l("li",null,[i("다행히 아직 선점당하지 않은 도메인이 있습니다. "),l("code",null,".ml"),i("이 뭔가 머신러닝 느낌도 나고 좋아 보입니다. "),l("code",null,"Get it now!"),i("를 누릅니다.")])],-1),g={class:"image-450"},f=l("blockquote",null,[l("p",null,[l("code",null,"Get it now!"),i("로 선택이 불가능하다면, "),l("code",null,"12purple.ml"),i("처럼 전체 도메인으로 다시 검색합니다.")])],-1),T=l("ol",{start:"3"},[l("li",null,[i("12개월 무료를 선택하고 "),l("code",null,"Continue"),i("를 누릅니다.")])],-1),_={class:"image-550"},S=l("ol",{start:"4"},[l("li",null,"이메일 인증 또는 구글, 페이스북으로 로그인하고 최종 정보를 입력하면 도메인이 발급됩니다.")],-1),A={class:"image-450"},h=t('<blockquote><p>freenom은 테스트 용도로만 사용하고 실제 서비스에 사용한다면 유료 도메인을 검토해주세요.</p></blockquote><h2 id="dns-등록" tabindex="-1">DNS 등록 <a class="header-anchor" href="#dns-등록" aria-hidden="true">#</a></h2><p>발급받은 도메인에 주소를 연결하기 위해 DNS(Domain Name System)를 등록합니다.</p><p>AWS를 이용중이면 Amazon Route53을 사용하는 것이 좋습니다. Amazon Route53은 저렴하고 모니터링이나 로드 밸런싱 같은 <a href="https://aws.amazon.com/ko/route53/" target="_blank" rel="noopener noreferrer">여러 가지 기능</a>을 제공합니다. 최근 AWS에 특화된 기능이 붙으면서 UI가 많이 복잡해졌는데 지금은 DNS의 기본적인 사용법을 알아보는 것이 중요하므로 좀 더 일반적이고 범용적으로 사용할 수 있는 Cloudflare를 사용하겠습니다.</p><p><a href="https://www.cloudflare.com/" target="_blank" rel="noopener noreferrer">Cloudflare</a>에 로그인하고 Websites 메뉴에서 새로운 사이트를 추가합니다.</p><ol><li>방금 생성한 도메인을 입력하고</li></ol>',6),C={class:"image-400"},b=l("ol",{start:"2"},[l("li",null,"무료 플랜을 선택합니다.")],-1),v={class:"image-500"},w=l("ol",{start:"3"},[l("li",null,[l("code",null,"12purple.ml"),i("을 바라보는 경로를 추가합니다.")])],-1),P=t('<blockquote><ul><li><code>Type</code>: IP주소를 바로 입력할 땐 A를 선택하고 도메인 주소를 바라볼 땐 CNAME을 선택합니다. ALB는 고정 IP 대신 도메인을 제공하므로 CNAME을 선택합니다.</li><li><code>Name</code>: 도메인 앞에 붙는 주소를 입력합니다. <a href="http://www.12purple.ml" target="_blank" rel="noopener noreferrer">www.12purple.ml</a> 이라면 www를 입력하고 <a href="http://12purple.ml" target="_blank" rel="noopener noreferrer">12purple.ml</a> 처럼 아무것도 없다면 @를 입력합니다.</li><li><code>Target</code>: 바라보는 주소를 입력합니다. ALB 도메인 주소를 입력합니다.</li><li><code>Proxy</code>: Cloudflare에 특화된 기능입니다. 단순 경로 설정만 할지, 모든 트래픽을 Cloudflare를 거치게 할지 선택합니다. 상황에 따라 결정해야 하는 데 일단 사용하고 어떤 기능인지 알아보겠습니다.</li><li><code>TTL</code>: 경로 정보 유지(캐시) 시간을 설정합니다. 한번 IP 정보를 조회하면 TTL 시간만큼 다시 조회하지 않습니다. TTL 시간이 너무 길면 DNS 변경이 바로 적용되지 않으므로 너무 길지 않게 설정합니다.</li></ul></blockquote><ol start="4"><li>마지막으로 도메인을 구입한 곳에서 Cloudflare DNS를 바라보도록 네임서버<sup>Nameserver</sup>를 변경합니다.</li></ol>',2),L={class:"image-450"},k=l("ol",{start:"5"},[l("li",null,"Management Tools > Nameservers 메뉴를 선택합니다.")],-1),D={class:"image-600"},N=l("ol",{start:"6"},[l("li",null,"Cloudflare에서 안내한 네임서버 주소를 입력합니다. 그리고 잠시 기다립니다.")],-1),M={class:"image-600"},B=l("blockquote",null,[l("p",null,"DNS는 전파되는 데 시간이 필요합니다. 빠르면 1~2분, 늦으면 하루가 걸리기도 합니다.")],-1),H=l("ol",{start:"7"},[l("li",null,"잠시 기다리고 새로고침하면 최종적으로 설정이 완료됩니다.")],-1),I={class:"image-600"},V={class:"image-600"},W=l("p",null,[i("🎉 짠! "),l("a",{href:"https://12purple.ml",target:"_blank",rel:"noopener noreferrer"},"https://12purple.ml"),i(" 접속에 성공했습니다! 도메인이 연결되었고.. 앗? "),l("code",null,"HTTPS(SSL)"),i("로 접속됩니다?")],-1),E=l("h2",{id:"https",tabindex:"-1"},[i("HTTPS "),l("a",{class:"header-anchor",href:"#https","aria-hidden":"true"},"#")],-1),y=t('<p>사용자가 웹서버와 통신을 하면 중간에 악의적인 사용자가 내용을 몰래 훔쳐볼 수 있습니다. 예를 들어, 신뢰할 수 없는 Wifi 공유기를 사용하면 공유기에 설치된 악의적인 프로그램이 메시지를 훔쳐볼 수 있는 거죠.</p><p>HTTPS를 사용하면 모든 요청을 암호화해서 전송합니다.</p><p>다음과 같은 HTTP 요청을</p><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">GET /ping HTTP/2</span></span>\n<span class="line"><span style="color:#A6ACCD;">Host: 12purple.ml</span></span>\n<span class="line"><span style="color:#A6ACCD;">user-agent: curl/7.79.1</span></span>\n<span class="line"><span style="color:#A6ACCD;">accept: </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">*</span></span>\n<span class="line"></span></code></pre></div><p>HTTPS에선 이런 식으로 전송합니다.</p><div class="language-"><pre><code>m5ea9XAZX7mUjeVCVMWWBwqKVQ585h8DVUDPSXzMjv7AJBS...\n</code></pre></div><p>HTTPS 기술은 안전하지만, 문제는 <strong>암호화 구간</strong>입니다.</p><p>Cloudflare에서 기본으로 설정한 Flexible 방식은 브라우저와 Cloudflare 구간만 암호화 하는 방식입니다.</p>',8),R={class:"image-550"},x=t('<p>브라우저와 Cloudflare 구간은 암호화하지만, Cloudflare에서 AWS(ALB) 구간은 평문으로 전송하는 것을 볼 수 있습니다.평문으로 전송된 데이터는 악의적인 사용자가 훔쳐볼 수 있고 이를 해결하려면 Cloudflare와 AWS 구간도 HTTPS 통신을 하거나 프록시 기능을 사용하지 않고 직접 ALB에서 HTTPS를 제공해야 합니다.</p><div class="tip custom-block"><p class="custom-block-title">Cloudflare 더보기</p><p>📝 <a href="https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes/" target="_blank" rel="noopener noreferrer">SSL 암호화 방식 안내</a></p></div><h2 id="aws-certificate-manager" tabindex="-1">AWS Certificate Manager <a class="header-anchor" href="#aws-certificate-manager" aria-hidden="true">#</a></h2><p>보안 취약점을 해결하기 위해 ALB에 인증서를 적용합니다.</p>',4),z={class:"image-700"},q=t('<p>브라우저와 AWS(ALB) 구간을 암호화하고 ALB와 EC2 구간은 기존과 동일하게 평문으로 전송합니다. AWS 내부 통신이 평문이긴 하지만, VPC 네트워크는 다른 네트워크와 격리되어 있기 때문에 데이터가 유출될 가능성은 거의 없습니다.</p><p>로드밸런서가 HTTPS를 처리하고 백엔드 서버와 HTTP로 통신하는 방식을 SSL Termination 또는 SSL Offloading이라고 하는데, 이 방식은 암복호화 부하를 로드 밸런서가 책임지기 때문에 백엔드 서버의 부하가 줄어들고 백엔드 서버에 별도 인증서를 설정할 필요가 없어 전체 설정이 단순하고 편리한 장점이 있습니다.</p><div class="warning custom-block"><p class="custom-block-title">ELB의 SSL Termination 방식은 안전한가요?</p><p><a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/configuring-https-endtoend.html" target="_blank" rel="noopener noreferrer">충분히 안전</a>하지만 완전히 안전하진 않습니다. 더 높은 수준의 보안을 요구하는 경우 ELB와 EC2 구간도 HTTPS로 암호화해야 합니다.</p><p>📝 <a href="https://kevin.burke.dev/kevin/amazons-albs-insecure-internal-traffic/" target="_blank" rel="noopener noreferrer">ALB와 내부 서비스간 인증 더보기</a></p></div><p>ACM(AWS Certificate Manager)을 사용하면 인증서를 <strong>무료로</strong> 만들 수 있습니다. ACM메뉴에서 <code>Request a certificate</code>를 선택합니다.</p><ol><li><code>Public certificate</code>를 선택하고 <code>Next</code>를 클릭합니다.</li></ol>',5),F={class:"image-600"},G=t('<ol start="2"><li>도메인을 설정합니다.</li></ol><p>인증서는 특정 도메인뿐 아니라, 서브 도메인(*.12purple.ml)을 지원합니다. Wildcard라고 부르는 기능을 사용하면 도메인마다 설정할 필요가 없이 *로 여러 개의 도메인을 지원하기 때문에 유용합니다. 단, 서브의 서브는 지원하지 않기 때문에 별도로 등록해야 합니다.</p><p>여기선 <code>12purple.ml</code>과 그 하위 도메인 <code>*.12purple.ml</code>(<a href="http://www.12purple.ml" target="_blank" rel="noopener noreferrer">www.12purple.ml</a>, <a href="http://api.12purple.ml" target="_blank" rel="noopener noreferrer">api.12purple.ml</a>, status,<a href="http://12purple.ml" target="_blank" rel="noopener noreferrer">12purple.ml</a>, ...), 테스트 서버용으로 사용할 <code>*.test.12purple.ml</code>(<a href="http://pr-01.test.12purple.ml" target="_blank" rel="noopener noreferrer">pr-01.test.12purple.ml</a>, ...)을 추가합니다.</p>',3),O={class:"image-600"},j=l("ol",{start:"3"},[l("li",null,"도메인 인증 방식을 선택합니다.")],-1),K=l("p",null,[i("인증서는 도메인 소유자만 만들 수 있기 때문에, 소유자 인증을 해야 합니다. "),l("code",null,"DNS validation"),i("은 특정 값을 DNS에 지정하여 소유자임을 증명하는 방식입니다.")],-1),U={class:"image-600"},X=l("ol",{start:"4"},[l("li",null,"인증서를 만들고 상태를 확인합니다.")],-1),J=l("p",null,"인증서 등록 상태를 보면 인증대기 중(Pending validation)인 것을 알 수 있습니다. DNS에 CNAME을 등록하면 ACM이 자동으로 확인하고 인증서를 발급해 줍니다. Amazon Route53을 이용하면 CNAME 등록을 자동으로 할 수 있지만, Cloudflare는 수동으로 추가해야합니다.",-1),Q=l("ol",{start:"5"},[l("li",null,"한 땀 한 땀 추가하고 최초 설정한 프록시도 해제합니다.")],-1),Z=l("ol",{start:"6"},[l("li",null,[i("조금 시간이 지나고 "),l("s",null,"가끔 오래걸림"),i(" 새로고침을 하면 인증서가 발급(Issued)됩니다.")])],-1),Y=t('<div class="tip custom-block"><p class="custom-block-title">AWS Certificat Manager 더보기</p><p>📔 <a href="https://aws.amazon.com/ko/certificate-manager/" target="_blank" rel="noopener noreferrer">AWS Certificat Manager 소개</a></p></div><h2 id="alb-인증서-추가하기" tabindex="-1">ALB 인증서 추가하기 <a class="header-anchor" href="#alb-인증서-추가하기" aria-hidden="true">#</a></h2><p>마지막으로 ALB에 인증서를 추가합니다.</p><ol><li>기존에 생성했던 ALB에 HTTPS용 리스너를 추가합니다.</li></ol>',4),$={class:"image-650"},ee=l("ol",{start:"2"},[l("li",null,"HTTPS 프로토콜과 443 포트를 설정하고 기존에 생성했던 Target group을 선택합니다.")],-1),ae={class:"image-650"},le=l("ol",{start:"3"},[l("li",null,"조금 전에 만들었던 인증서를 선택합니다.")],-1),re={class:"image-650"},se=l("ol",{start:"4"},[l("li",null,"기존 ALB의 방화벽(Security Group)은 80포트만 오픈했기 때문에 추가로 443포트를 오픈합니다. Security Groups에서 ALB에 설정한 항목을 선택하고 Inbound Rules를 수정합니다.")],-1),te={class:"image-650"},ie=l("p",null,"이제 다시 접속해봅니다.",-1),oe=l("p",null,"🎉 성공입니다! ALB 인증서로 HTTPS가 정상 동작하는 것을 확인하였습니다.",-1),ne=l("h2",{id:"마무리",tabindex:"-1"},[i("마무리 "),l("a",{class:"header-anchor",href:"#마무리","aria-hidden":"true"},"#")],-1),pe=l("p",null,"지금까지 AWS에 웹 서버를 배포하고 도메인을 연결하고 인증서를 적용해 보았습니다. 클라우드 환경이 등장하면서 많은 부분이 간소화되었지만, 여전히 불편한 부분이 있습니다.",-1),ce=l("p",null,"서버를 관리하는 엔지니어들은 더 더 더 자동화를 원하고 안정적인 서비스를 제공하기 위해 노력하였습니다. 다음 장부터 어떤 기술이 있는지 하나씩 알아보겠습니다.",-1);var de=e(c,[["render",function(e,t,i,p,c,de){const me=o("custom-image"),ue=o("Chat-KakaoMsg"),ge=o("Chat-KakaoRoom");return n(),a("div",null,[d,l("div",m,[r(me,{src:"/imgs/aws-domain/freenom-search.png",alt:"freenom"})]),u,l("div",g,[r(me,{src:"/imgs/aws-domain/freenom-result.png",alt:"freenom result"})]),f,T,l("div",_,[r(me,{src:"/imgs/aws-domain/freenom-cart.png",alt:"freenom cart"})]),S,l("div",A,[r(me,{src:"/imgs/aws-domain/freenom-verify.png",alt:"freenom verify"})]),h,l("div",C,[r(me,{src:"/imgs/aws-domain/cf-add-site.png",alt:"Cloudflare Websites"})]),b,l("div",v,[r(me,{src:"/imgs/aws-domain/cf-plan.png",alt:"Cloudflare Plan"})]),w,r(me,{src:"/imgs/aws-domain/cf-add-record.png",alt:"Cloudflare Add Record"}),P,l("div",L,[r(me,{src:"/imgs/aws-domain/cf-nameserver.png",alt:"Cloudflare Nameserver"})]),k,l("div",D,[r(me,{src:"/imgs/aws-domain/freenom-edit.png",alt:"Freenom Edit"})]),N,l("div",M,[r(me,{src:"/imgs/aws-domain/freenom-ns.png",alt:"Freenom Nameserver"})]),B,H,l("div",I,[r(me,{src:"/imgs/aws-domain/cf-success.png",alt:"Cloudflare Success"})]),l("div",V,[r(me,{src:"/imgs/aws-domain/12purple.png",alt:"12Purple"})]),W,E,r(ge,null,{default:s((()=>[r(ue,{msg:"Cloudflare에서 제공하는 프록시 기능을 사용했더니 자동으로 HTTPS 적용이 되네요!",isMe:"true"}),r(ue,{avatar:"senior",user:"촋 CTO",msg:"HTTPS가 뭔지 아시나요?",isMe:"false"}),r(ue,{msg:"아.. 그 HTTP 통신에 암호화 기능을 추가해서 데이터를 안전하게 주고받을 수 있게 해주는 거 아닌가요?",isMe:"true"}),r(ue,{avatar:"senior",user:"촋 CTO",msg:"네네 그러면 지금 Cloudflare가 HTTPS를 적용해주니까 안전한 걸까요??",isMe:"false"}),r(ue,{msg:"네네 그쵸 브라우저에서도 자물쇠 모양이 보이고 안전한 연결이라고 확인했습니다",isMe:"true"}),r(ue,{avatar:"senior",user:"촋 CTO",msg:"사실 방금 적용한 HTTPS 방식은 안전하지 않아요. Cloudflare에서도 개인정보가 포함되어 있을 땐 해당 방식을 사용하지 말라고 안내합니다",isMe:"false"}),r(ue,{msg:"오잉?? ",isMe:"true"}),r(ue,{avatar:"senior",user:"촋 CTO",msg:"HTTPS가 어떻게 동작하는지 정확히 이해하지 않으면, 오히려 보안에 더 위험할 수 있어요. 한번 자세히 알아볼게요!",isMe:"false"})])),_:1}),y,l("div",R,[r(me,{src:"/imgs/aws-domain/cf-flexible.png",alt:"Cloudflare flexible mode"})]),x,l("div",z,[r(me,{src:"/imgs/aws-domain/aws-certificate.png",alt:"Cloudflare flexible mode"})]),q,l("div",F,[r(me,{src:"/imgs/aws-domain/acm-public.png",alt:"ACM public certificate"})]),G,l("div",O,[r(me,{src:"/imgs/aws-domain/acm-domain.png",alt:"ACM Domain"})]),j,K,l("div",U,[r(me,{src:"/imgs/aws-domain/acm-validation.png",alt:"ACM Validation"})]),X,J,r(me,{src:"/imgs/aws-domain/acm-status.png",alt:"ACM Status"}),Q,r(me,{src:"/imgs/aws-domain/cf-validation.png",alt:"Cloudflare DNS"}),Z,r(me,{src:"/imgs/aws-domain/acm-success.png",alt:"ACM issued"}),Y,l("div",$,[r(me,{src:"/imgs/aws-domain/alb-listner.png",alt:"ALB Listner"})]),ee,l("div",ae,[r(me,{src:"/imgs/aws-domain/alb-443.png",alt:"ALB Protocol"})]),le,l("div",re,[r(me,{src:"/imgs/aws-domain/alb-ssl.png",alt:"ALB ssl"})]),se,l("div",te,[r(me,{src:"/imgs/aws-domain/sg-https.png",alt:"ALB SG"})]),ie,oe,ne,pe,ce])}]]);export{p as __pageData,de as default};
