import{_ as s,c as a,d as l,w as e,a as n,e as o,b as t,r as c,o as p}from"./app.7bd26314.js";const r='{"title":"AWS 다중 서버 배포","description":"","frontmatter":{"head":[["meta",{"property":"og:description","content":"AWS 다중 서버 배포 하기"}],["meta",{"property":"twitter:description","content":"AWS 다중 서버 배포 하기"}]]},"headers":[{"level":2,"title":"AWS VPC","slug":"aws-vpc"},{"level":2,"title":"AWS CLI","slug":"aws-cli"},{"level":2,"title":"프라이빗 서브넷 만들기","slug":"프라이빗-서브넷-만들기"},{"level":2,"title":"EC2 여러개 만들기","slug":"ec2-여러개-만들기"},{"level":2,"title":"Elastic Load Balancer 만들기","slug":"elastic-load-balancer-만들기"},{"level":2,"title":"마무리","slug":"마무리"}],"relativePath":"guide/aws-multi-deploy.md"}',i={},d=o("",4),u=o("",5),A={class:"image-500"},g=o("",5),C={class:"image-250"},D=n("ol",{start:"2"},[n("li",null,[t("Access Keys 항목에서 "),n("code",null,"Create New Access Key"),t("를 누릅니다.")])],-1),y={class:"image-800"},m=n("ol",{start:"3"},[n("li",null,"Access Key ID와 Secret Access Key를 확인할 수 있습니다.")],-1),b={class:"image-550"},v=o("",11),h={class:"image-550"},_=o("",21),F={class:"image-550"},w=n("p",null,"퍼블릭 서브넷에 EC2를 배치하고 바로 요청을 처리하는 방식입니다. 방화벽을 설정했지만, 왠지 불안한 구성입니다.",-1),S={class:"image-550"},T=n("p",null,"이번에 구성할 방식은 프라이빗 서브넷에 EC2 2대를 배치하고 Load Balancer를 통해 요청을 처리합니다. 프라이빗 서브넷에 배치해서 안전하고 Load Balancer를 통해 여러 대의 서버에 요청을 할 수 있습니다.",-1),f=n("p",null,[n("a",{href:"./aws-deploy.html#ec2-만들기"},"지난번"),t("에 만들었던 방법과 비슷하게 EC2를 2대 생성합니다. 차이점은 Subnet, Auto-assign public IP, Security Group 입니다.")],-1),I=n("p",null,[n("strong",null,"Subnet"),t(),n("code",null,"Private 영역 선택")],-1),k=n("ul",null,[n("li",null,"앞에서 생성한 프라이빗 서브넷을 선택합니다.")],-1),E={class:"image-600"},P=n("p",null,[n("strong",null,"Auto-assign public IP"),t(),n("code",null,"Disable")],-1),x=n("ul",null,[n("li",null,"외부에 노출하지 않는 서버이므로 공인 아이피를 할당하지 않습니다.")],-1),B={class:"image-600"},L=n("p",null,[n("strong",null,"Security Group"),t(),n("code",null,"3000 포트를 전체(0.0.0.0/0) 허용")],-1),V=n("ul",null,[n("li",null,"Load Balancer가 80 포트로 요청을 받으면 뒤에 있는 서버는 꼭 80 포트가 아니여도 괜찮습니다. 기존 애플리케이션 설정인 3000 포트를 사용합니다.")],-1),N={class:"image-650"},q=n("p",null,[n("strong",null,"Number of instances"),t(),n("code",null,"2")],-1),W=n("ul",null,[n("li",null,"동일한 설정으로 여러 대의 서버를 생성합니다.")],-1),M={class:"image-350"},K=n("p",null,[t("서버가 생성되면, "),n("a",{href:"./aws-deploy.html#node-js-배포"},"지난번과 동일"),t("하게 서버에 접속하여 애플리케이션을 배포합니다. 3000포트 그대로 서비스하므로 iptables 설정은 제외해도 됩니다.")],-1),G=n("h2",{id:"elastic-load-balancer-만들기",tabindex:"-1"},[t("Elastic Load Balancer 만들기 "),n("a",{class:"header-anchor",href:"#elastic-load-balancer-만들기","aria-hidden":"true"},"#")],-1),R=n("p",null,"로드 밸런서는 부하를 적절하게 분산해주는 장치입니다. 기본적인 동작 방식은 사용자가 로드 밸런서에 요청을 보내면 로드 밸런서가 여러대의 서버 중 한대에 요청을 전달하고, 서버가 응답한 결과를 다시 사용자에게 전달해줍니다.",-1),z=n("p",null,"Elastic Load Balancer는 Application Load Balancers, Network Load Balancers, Gateway Load Balancers, Classic Load Balancer 총 4가지 로드 밸런서를 제공하는데 여기선 ALB(Application Load Balancers)를 사용합니다. HTTP 통신을 할 때 가장 많이 사용하는 로드 밸런서입니다.",-1),O=n("p",null,"EC2 > Load Balancers 메뉴에서 새로운 로드 밸런서를 추가합니다.",-1),H=n("ol",null,[n("li",null,"여러 종류 중에 ALB를 선택합니다.")],-1),j={class:"image-700"},U=n("ol",{start:"2"},[n("li",null,"이름을 입력하고 Scheme와 IP address type은 기본값을 선택합니다. 내부망에서 사용하는 경우 Internal을 선택할 수 있습니다.")],-1),Z={class:"image-700"},J=n("ol",{start:"3"},[n("li",null,"로드 밸런서를 배치할 서브넷을 선택합니다. 로드 밸런서는 인터넷 요청을 받아야 하므로 퍼블릭 서브넷에 배치하고 안정성을 위해 2개 이상의 가용 영역을 선택합니다.")],-1),Q={class:"image-700"},X=n("ol",{start:"4"},[n("li",null,"HTTP(80)를 허용하는 Security Group을 만듭니다.")],-1),Y={class:"image-700"},$=n("ol",{start:"5"},[n("li",null,"로드 밸런서 HTTP(80) 요청을 전달할 Target Group을 생성합니다. 대부분 기본 설정을 그대로 사용하고 Port를 80에서 3000으로 변경합니다.")],-1),ss={class:"image-250"},as=n("blockquote",null,[n("p",null,[t("대상 인스턴스는 이전에 만든 EC2를 선택하고 "),n("code",null,"Include as pending below"),t("를 선택합니다.")])],-1),ls={class:"image-700"},es=n("ol",{start:"6"},[n("li",null,"생성한 Target Group을 선택합니다.")],-1),ns={class:"image-700"},os=o("",7);var ts=s(i,[["render",function(s,o,t,r,i,ts){const cs=c("Chat-KakaoMsg"),ps=c("Chat-KakaoRoom"),rs=c("custom-image");return p(),a("div",null,[d,l(ps,null,{default:e((()=>[l(cs,{avatar:"senior",user:"촋 CTO",msg:"이번엔 서버를 프라이빗 서브넷에 구축해 볼게요",isMe:"false"}),l(cs,{msg:"퍼블릭 서브넷하고 프라이빗 서브넷 차이가 뭔가요??",isMe:"true"}),l(cs,{avatar:"senior",user:"촋 CTO",msg:"퍼블릭 서브넷은 인터넷에 노출된 영역이고 프라이빗 서브넷은 인터넷과 분리된 내부망 영역이라고 보시면 돼요",isMe:"false"}),l(cs,{msg:"근데.. 인터넷이랑 분리되어 있으면 어떻게 접근하나요??",isMe:"true"}),l(cs,{avatar:"senior",user:"촋 CTO",msg:"퍼블릭 서브넷에 로드 밸런서랑 NAT 게이트웨이를 둘 거에요. 그럼 프라이빗 네트워크에 있는 서버가 외부랑 통신할 수 있어요",isMe:"false"}),l(cs,{msg:"아! 그럼 외부에서 접근할 땐 로드 밸런서를 통해서 접근하고 내부에서 인터넷 통신이 필요할 땐 NAT 게이트웨이를 거치는 거군요??",isMe:"true"}),l(cs,{avatar:"senior",user:"촋 CTO",msg:"네네 맞아요. 직접적인 서버 접근이 불가능하기 때문에 보안 측면에서 유리해요",isMe:"false"}),l(cs,{msg:"네트워크 구성이 쪼옴 어려울 수 있는데 일단 만들면서 알아볼게요",isMe:"false"})])),_:1}),u,n("div",A,[l(rs,{src:"/imgs/aws-multi-deploy/vpc-subnet.png",alt:"Public Subnet"})]),g,n("div",C,[l(rs,{src:"/imgs/aws-multi-deploy/security-credentials.png",alt:"Security Credentials"})]),D,n("div",y,[l(rs,{src:"/imgs/aws-multi-deploy/accesskey.png",alt:"Access Key"})]),m,n("div",b,[l(rs,{src:"/imgs/aws-multi-deploy/accesskey-create.png",alt:"Access Key Created"})]),v,n("div",h,[l(rs,{src:"/imgs/aws-multi-deploy/vpc-private-subnet.png",alt:"Public Subnet"})]),_,n("div",F,[l(rs,{src:"/imgs/aws-multi-deploy/vpc-public.png",alt:"Public Subnet"})]),w,n("div",S,[l(rs,{src:"/imgs/aws-multi-deploy/vpc-private.png",alt:"Public / Private Subnet"})]),T,f,I,k,n("div",E,[l(rs,{src:"/imgs/aws-multi-deploy/ec2-private-subnet.png",alt:"EC2 - Subnet"})]),P,x,n("div",B,[l(rs,{src:"/imgs/aws-multi-deploy/ec2-private-ip.png",alt:"EC2 - Public IP"})]),L,V,n("div",N,[l(rs,{src:"/imgs/aws-multi-deploy/ec2-private-sg.png",alt:"EC2 - Security Group"})]),q,W,n("div",M,[l(rs,{src:"/imgs/aws-multi-deploy/ec2-number.png",alt:"EC2 - Number of instances"})]),K,G,R,l(ps,null,{default:e((()=>[l(cs,{msg:"지난번엔 서버 IP로 바로 요청을 보냈는데, 이젠 로드 밸런서로 요청을 해야 하나요?",isMe:"true"}),l(cs,{avatar:"senior",user:"촋 CTO",msg:"네네 로드 밸런서로 요청을 보내면 연결된 서버로 부하를 분산해 줍니다",isMe:"false"}),l(cs,{msg:"근데.. 혹시 로드 밸런서가 죽으면 어떻게 되나요??",isMe:"true"}),l(cs,{avatar:"senior",user:"촋 CTO",msg:"로드 밸런서가 죽으면 아무리 서버가 많아도 서비스가 멈추겠죠??",isMe:"false"}),l(cs,{msg:"헉??!! 그럼.. 로드 밸런서를 안 죽게 그 앞에 또 로드 밸런서를 두나요..?",isMe:"true"}),l(cs,{msg:"그리고 부하가 진짜 많으면 로드 밸런서도 죽을 수 있는 거 아닌가요?",isMe:"true"}),l(cs,{avatar:"senior",user:"촋 CTO",msg:"ㅎㅎ 맞아요. 로드 밸런서도 죽을 수 있기 때문에 대비가 필요해요",isMe:"false"}),l(cs,{msg:"그 고민을 해결해주는 서비스가 Elastic Load Balancer에요. Elastic Load Balancer는 둘 이상의 가용 영역에서 설치해서 안정성을 높이고 트래픽에 따라 자동으로 성능을 확장해줍니다",isMe:"false"})])),_:1}),z,O,H,n("div",j,[l(rs,{src:"/imgs/aws-multi-deploy/create-lb.png",alt:"ELB - Type"})]),U,n("div",Z,[l(rs,{src:"/imgs/aws-multi-deploy/elb-basic-config.png",alt:"ELB - Basic Configuration"})]),J,n("div",Q,[l(rs,{src:"/imgs/aws-multi-deploy/elb-network.png",alt:"ELB - Network Mapping"})]),X,n("div",Y,[l(rs,{src:"/imgs/aws-multi-deploy/elb-sg.png",alt:"ELB - Security Group"})]),$,n("div",ss,[l(rs,{src:"/imgs/aws-multi-deploy/target-group-port.png",alt:"Target Group - Port"})]),as,n("div",ls,[l(rs,{src:"/imgs/aws-multi-deploy/target-group-regist.png",alt:"Target Group - Regist"})]),es,n("div",ns,[l(rs,{src:"/imgs/aws-multi-deploy/elb-target.png",alt:"ELB - Target Group"})]),os])}]]);export{r as __pageData,ts as default};
