import{_ as s,c as a,d as n,w as l,e as p,r as o,o as e}from"./app.7bd26314.js";const t='{"title":"Git","description":"","frontmatter":{"head":[["meta",{"property":"og:description","content":"Git을 이용한 소스 버전 관리와 TDD"}],["meta",{"property":"twitter:description","content":"Git을 이용한 소스 버전 관리와 TDD"}]]},"headers":[{"level":2,"title":"버전관리","slug":"버전관리"},{"level":2,"title":"TDD","slug":"tdd"},{"level":2,"title":"마무리","slug":"마무리"}],"relativePath":"guide/git.md"}',c={},r=p('<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">⚡️ 목표</p><p>✅ <a href="https://git-scm.org/" target="_blank" rel="noopener noreferrer">Git</a>을 이용하여 소스를 버전 관리합니다.<br> ✅ TDD 방식으로 새 기능을 추가합니다.</p></div><p><div class="table-of-contents"><ul><li><a href="#버전관리">버전관리</a></li><li><a href="#tdd">TDD</a></li><li><a href="#마무리">마무리</a></li></ul></div></p><h2 id="버전관리" tabindex="-1">버전관리 <a class="header-anchor" href="#버전관리" aria-hidden="true">#</a></h2>',4),D=p('<p>Git은 리누스 토발즈가 2005년에 <s>2주 만에 만든</s> 분산 버전 관리 시스템(DVCS)<sup>Distributed version control systems</sup>입니다. 속도가 빠르고 강력한 브랜치 기능으로 사실상 표준으로 사용하고 있습니다.</p><p>우선 <a href="https://subicura.com/git/prepare/git-setup.html?utm_source=subicura.com&amp;utm_medium=referral&amp;utm_campaign=devops" target="_blank" rel="noopener noreferrer">Git을 설치</a>하고 저장소를 설정합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># 저장소 초기화</span></span>\n<span class="line"><span style="color:#A6ACCD;">git init</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 현재 저장소 상태 확인</span></span>\n<span class="line"><span style="color:#A6ACCD;">git status</span></span>\n<span class="line"></span></code></pre></div><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">On branch main</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">No commits yet</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Untracked files:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">use </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git add &lt;file&gt;...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> to include </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> what will be committed</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">\t.eslintrc.json</span></span>\n<span class="line"><span style="color:#A6ACCD;">\tnode_modules/</span></span>\n<span class="line"><span style="color:#A6ACCD;">\tpackage-lock.json</span></span>\n<span class="line"><span style="color:#A6ACCD;">\tpackage.json</span></span>\n<span class="line"><span style="color:#A6ACCD;">\tsrc/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">nothing added to commit but untracked files present </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">use </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git add</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> to track</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre></div><p><code>Untracked files</code>에 버전 관리할 파일들이 보입니다. 근데 <code>node_modules</code>는 <code>npm install</code>로 설치하는 항목이므로 버전 관리에서 제외해야 합니다. 가급적 소스코드만 최소한으로 관리하는 것이 좋습니다.</p><p><code>.gitignore</code> 파일을 생성합니다.</p><div class="language-"><pre><code>node_modules\n</code></pre></div><p>이제 <code>node_modules</code> 폴더를 제외했으니 첫 번째 커밋을 작성합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># 전체 파일을 버전 관리 항목으로 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">git add </span><span style="color:#82AAFF;">.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 첫 번째 커밋</span></span>\n<span class="line"><span style="color:#A6ACCD;">git commit -m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">init</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"></span></code></pre></div><p>🎉 첫 번째 커밋을 작성했습니다. 이제 파일을 수정하면 변경된 내용을 확인할 수 있고 지워진 파일을 복구할 수도 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">Git 더보기</p><p>📔 <a href="https://git-scm.com/doc" target="_blank" rel="noopener noreferrer">공식 문서</a><br> 📔 <a href="https://subicura.com/git/?utm_source=subicura.com&amp;utm_medium=referral&amp;utm_campaign=devops" target="_blank" rel="noopener noreferrer">Git / GitHub 안내서</a><br> 📝 <a href="https://subicura.com/git/prepare/?utm_source=subicura.com&amp;utm_medium=referral&amp;utm_campaign=devops" target="_blank" rel="noopener noreferrer">Git 설치하기</a><br> 📝 <a href="https://subicura.com/git/guide/?utm_source=subicura.com&amp;utm_medium=referral&amp;utm_campaign=devops#git%E1%84%8B%E1%85%B4-%E1%84%90%E1%85%B3%E1%86%A8%E1%84%8C%E1%85%B5%E1%86%BC" target="_blank" rel="noopener noreferrer">Git 기본 가이드</a></p></div><h2 id="tdd" tabindex="-1">TDD <a class="header-anchor" href="#tdd" aria-hidden="true">#</a></h2><p>Git도 도입했고, 이제 본격적으로 <code>Awesome API</code>의 두 번째 기능을 추가합니다. 지금 생각하는 기능은 <code>/ping</code>에 요청을 보내면 <code>{ &quot;status&quot;: &quot;ok&quot; }</code>를 응답하는 API 입니다.</p>',13),y=p('<p>테스트 코드를 작성하고 확인할 때, 매번 <code>npm t</code>를 입력하는 것이 번거로우므로 <code>--watch</code> 옵션을 추가합니다.</p><p><code>package.json</code> 파일을 다음과 같이 수정합니다.</p><div class="language-json"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted"> </div><br><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node src/server.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint .</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">src/**/*.+(js|json)</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">validate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm run lint &amp;&amp; npm run format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test:watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jest --watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>스크립트를 실행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># 테스트 실행</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm run test:watch</span></span>\n<span class="line"></span></code></pre></div><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">No tests found related to files changed since last commit.</span></span>\n<span class="line"><span style="color:#A6ACCD;">Press </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> to run all tests, or run Jest with </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">--watchAll</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Watch Usage</span></span>\n<span class="line"><span style="color:#A6ACCD;"> › Press a to run all tests.</span></span>\n<span class="line"><span style="color:#A6ACCD;"> › Press f to run only failed tests.</span></span>\n<span class="line"><span style="color:#A6ACCD;"> › Press p to filter by a filename regex pattern.</span></span>\n<span class="line"><span style="color:#A6ACCD;"> › Press t to filter by a </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> name regex pattern.</span></span>\n<span class="line"><span style="color:#A6ACCD;"> › Press q to quit watch mode.</span></span>\n<span class="line"><span style="color:#A6ACCD;"> › Press Enter to trigger a </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> run.</span></span>\n<span class="line"></span></code></pre></div><p>Jest는 똑똑하게 마지막 커밋 이후로 수정된 파일에 대해서 테스트를 수행합니다. 테스트 코드를 추가합니다.</p><p><code>src/__tests__/app.js</code>에 <code>/ping</code>에 대한 테스트를 추가합니다.</p><div class="language-js"><pre><code><span class="line"><span style="color:#89DDFF;">...</span></span>\n<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;/ping&quot; 요청시 &quot;status: ok&quot; 응답 확인</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">inject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">expect</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toEqual</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> status</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><p>테스트 코드를 저장하면 자동으로 테스트를 수행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;"> FAIL  src/__tests__/app.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✓ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">79 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✕ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status: ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">3 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  ● </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status: ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    expect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">received</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.toEqual</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expected</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> // deep equality</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    - Expected  - 1</span></span>\n<span class="line"><span style="color:#A6ACCD;">    + Received  + 3</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      Object </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    -   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    +   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Not Found</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    +   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Route GET:/ping not found</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    +   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">statusCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: 404,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      18 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     url: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      19 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   })</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> 20 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">expect(res.json</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">).toEqual</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">{ status: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> }</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                      ^</span></span>\n<span class="line"><span style="color:#A6ACCD;">      21 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> })</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      22 </span><span style="color:#89DDFF;">|</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      at Object.</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">anonymous</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">src/__tests__/app.js:20:22</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Test Suites: 1 failed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Tests:       1 failed, 1 passed, 2 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Snapshots:   1 passed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Time:        0.309 s, estimated 1 s</span></span>\n<span class="line"><span style="color:#A6ACCD;">Ran all </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> suites related to changed files.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Watch Usage: Press w to show more.</span></span>\n<span class="line"></span></code></pre></div><p>아직 코드를 작성하기 전이므로 정상적으로 테스트가 실패하였습니다.</p><p>저장할 때마다 실시간으로 테스트 결과를 알려주니 편한 것 같습니다. <s>모니터를 하나 더 사야겠습니다</s></p><p>이제 <code>src/app.js</code> 파일에 <code>/ping</code> 내용을 추가합니다.</p><div class="language-js"><pre><code><span class="line"><span style="color:#89DDFF;">...</span></span>\n<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> status</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><p>파일을 저장하면 자동으로 테스트를 수행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;"> PASS  src/__tests__/app.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✓ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">90 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✓ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">status: ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">2 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Test Suites: 1 passed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Tests:       2 passed, 2 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Snapshots:   1 passed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Time:        0.295 s, estimated 1 s</span></span>\n<span class="line"><span style="color:#A6ACCD;">Ran all </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> suites related to changed files.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Watch Usage: Press w to show more.</span></span>\n<span class="line"></span></code></pre></div><p>🎉 성공! 모든 테스트를 통과했습니다.</p><p>새로운 기능을 순식간에 만들었고 테스트 코드가 있어 심적으로 안정감을 느낍니다. <code>toEqual</code>을 <code>toMatchInlineSnapshot</code> 함수로 변경하고 수정한 코드를 커밋합니다.</p><p>아참! 커밋하기전에 정적 코드 분석을 먼저합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># 정적분석, 포멧팅 실행</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm run validate</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 변경된 파일 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">git add </span><span style="color:#82AAFF;">.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 커밋</span></span>\n<span class="line"><span style="color:#A6ACCD;">git commit -m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">add ping</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"></span></code></pre></div><h2 id="마무리" tabindex="-1">마무리 <a class="header-anchor" href="#마무리" aria-hidden="true">#</a></h2><p>Git은 많은 회사에서 사용 중인 협업을 위한 필수 도구입니다. 단순 이력 관리 외에 다양한 부가기능이 있으며, CLI 외에 GUI 도구나 IDE에 내장된 기능을 적절히 사용하면 생산성을 높일 수 있습니다. 특히 Git의 고급기능을 사용하면 고오오오급 개발자처럼 보이는 효과가 있습니다.</p><p>이제 Git을 도입했으니 본격적으로 GitHub을 이용하여 팀과 협업해봅니다.</p>',24);var F=s(c,[["render",function(s,p,t,c,F,i){const C=o("Chat-KakaoMsg"),A=o("Chat-KakaoRoom");return e(),a("div",null,[r,n(A,null,{default:l((()=>[n(C,{avatar:"senior",user:"촋 CTO",msg:"지난번에 파일을 압축해서 보내주셨는데, 혹시 GitHub 저장소에 초대해 주실 수 있나요?",isMe:"false"}),n(C,{msg:"아.. 저희가 아직 Git을 안쓰고 소스를 이메일로 공유하고 있어서요.. ㅠㅠ",isMe:"true"}),n(C,{msg:"매일매일 하루에 한번씩 압축해서 보관해요! ㅎㅎ",isMe:"true"}),n(C,{avatar:"senior",user:"촋 CTO",msg:"읔.. 그럼 이번에 본격적으로 Git을 도입해볼까요??",isMe:"false"}),n(C,{msg:"Git을 사용하면 타임머신처럼 이전 상태로 쉽게 돌아갈 수 있고 협업도 더 간편해질거에요 ㅎㅎ",isMe:"false"}),n(C,{msg:"오.. 좋습니다!",isMe:"true"})])),_:1}),D,n(A,null,{default:l((()=>[n(C,{msg:"Git 첫 번째 Commit 성공했어요!",isMe:"true"}),n(C,{avatar:"senior",user:"촋 CTO",msg:"오.. 축하합니다!",isMe:"false"}),n(C,{msg:"이번에 새로운 기능을 추가하고 있는데.. 혹시 TDD 방식으로 만들어 볼 수 있을까요?",isMe:"true"}),n(C,{avatar:"senior",user:"촋 CTO",msg:"테스트 코드가 마음에 드셨나 보네요 ㅎㅎ",isMe:"false"}),n(C,{msg:"그럼 본격적으로 테스트 코드를 더 작성해볼까요??",isMe:"false"}),n(C,{msg:"네네 ㅎㅎ",isMe:"true"})])),_:1}),y])}]]);export{t as __pageData,F as default};
