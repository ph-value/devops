import{_ as s,c as a,a as n,d as l,w as p,e as o,b as e,r as t,o as c}from"./app.7bd26314.js";const r='{"title":"GitHub","description":"","frontmatter":{"head":[["meta",{"property":"og:description","content":"GitHub을 이용한 협업과 Mock을 이용한 테스트"}],["meta",{"property":"twitter:description","content":"GitHub을 이용한 협업과 Mock을 이용한 테스트"}]]},"headers":[{"level":2,"title":"원격 저장소","slug":"원격-저장소"},{"level":2,"title":"GitHub Flow","slug":"github-flow"},{"level":2,"title":"Mock 테스트","slug":"mock-테스트"},{"level":2,"title":"마무리","slug":"마무리"}],"relativePath":"guide/github.md"}',F={},y=o("",7),D={class:"image-200"},i=n("ol",{start:"2"},[n("li",null,"저장소 이름을 입력하고 공개 여부를 선택합니다.")],-1),A={class:"image-750"},C=n("ol",{start:"3"},[n("li",null,"🎉 짠! 첫 번째 저장소를 만들었습니다.")],-1),d={class:"image-750"},u=o("",4),g=n("h2",{id:"github-flow",tabindex:"-1"},[e("GitHub Flow "),n("a",{class:"header-anchor",href:"#github-flow","aria-hidden":"true"},"#")],-1),h={class:"image-350"},v=o("",15),m={class:"image-650"},b=n("ol",{start:"2"},[n("li",null,[e("최종적으로 팀원이 코드 리뷰를 완료하면 "),n("code",null,"Merge pull request"),e(" 버튼을 누릅니다.")])],-1),f={class:"image-650"},E=o("",6),q=o("",27);var _=s(F,[["render",function(s,o,e,r,F,_){const P=t("custom-image"),T=t("Chat-KakaoMsg"),w=t("Chat-KakaoRoom");return c(),a("div",null,[y,n("div",D,[l(P,{src:"/imgs/github/add-repository.png",alt:"Add Repository"})]),i,n("div",A,[l(P,{src:"/imgs/github/new_repository.png",alt:"New Repository"})]),C,n("div",d,[l(P,{src:"/imgs/github/empty_repository.png",alt:"Empty Repository"})]),u,l(w,null,{default:p((()=>[l(T,{msg:"GitHub 저장소 만들었습니다!",isMe:"true"}),l(T,{msg:"이제 원격으로 코드 공유하려고요 ㅎㅎ",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"축하드립니다! 🎉",isMe:"false"}),l(T,{msg:"GitHub 저장소도 만들었으니, 효율적으로 협업하는 방법을 알아볼까요?",isMe:"false"}),l(T,{msg:"아.. 그냥 push, pull 잘하면 되는거 아닌가요?!",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"Git은 강력한 브랜치기능을 제공하는데, GitHub Flow 방식으로 개발하면 코드 리뷰와 협업이 편해져요",isMe:"false"}),l(T,{msg:"브런치.. 먹는 건가요..",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"브런치가 아니고 브랜치(branch)..인데 일단 브랜치 생성부터 알려드릴게요 ㅎㅎㅎ",isMe:"false"})])),_:1}),g,n("div",h,[l(P,{src:"/imgs/github/git-branch.png",alt:"Git Branch"})]),v,n("div",m,[l(P,{src:"/imgs/github/add_pr.png",alt:"Add Pull Request"})]),b,n("div",f,[l(P,{src:"/imgs/github/pr.png",alt:"Pull Request"})]),l(w,null,{default:p((()=>[l(T,{avatar:"senior",user:"촋 CTO",msg:"PR 올리신거 리뷰 달았어요",isMe:"false"}),l(T,{msg:"확인해보겠습니다~~",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"코드는 깔끔한데, 새로 만든 API 테스트코드가 빠졌더라고요. 추가하면 좋을 것 같아요!",isMe:"false"}),l(T,{msg:"아.. 자꾸 까먹네요 ㅠㅠ 추가하겠습니다",isMe:"true"})])),_:1}),E,l(w,null,{default:p((()=>[l(T,{msg:"테스트 코드를 작성하는데 문제가 생겼습니다! ;ㅁ;",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"???!!!",isMe:"false"}),l(T,{msg:"외부 API를 호출하는데.. 테스트할 때마다 결과가 달라서 테스트가 자꾸 실패하네요 ㅠㅠ",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"아.. 외부 API를 사용하는 경우엔 Mock을 이용하면 좋아요",isMe:"false"}),l(T,{msg:"Mock이.. 뭔가요",isMe:"true"}),l(T,{avatar:"senior",user:"촋 CTO",msg:"외부 API는 우리 맘대로 제어할 수 없고 응답을 받아서 처리만 가능하죠?",isMe:"false"}),l(T,{msg:"그럼 2가지 정도를 테스트 할 수 있는데, 1) API 서버가 정상적으로 응답을 주었을 때, 2) API 서버에 오류가 있을 때 저희가 만든 API가 정상적으로 처리하는지를 보면 될 것 같네요",isMe:"false"}),l(T,{msg:"실제로 외부 API를 호출하지 않고 마치 호출한 것처럼 하는 방법을 Mock이라고 해요",isMe:"false"}),l(T,{msg:"오.. 대박사건",isMe:"true"})])),_:1}),q])}]]);export{r as __pageData,_ as default};
