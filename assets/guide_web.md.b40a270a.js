import{_ as s,c as n,d as a,w as l,e as p,a as o,r as e,o as t}from"./app.7bd26314.js";const r='{"title":"Node.js 웹 애플리케이션","description":"","frontmatter":{"head":[["meta",{"property":"og:description","content":"Node.js 웹 애플리케이션에 정적분석, 포멧터, 테스트 코드 적용하기"}],["meta",{"property":"twitter:description","content":"Node.js 웹 애플리케이션에 정적분석, 포멧터, 테스트 코드 적용하기"}]]},"headers":[{"level":2,"title":"웹 애플리케이션","slug":"웹-애플리케이션"},{"level":2,"title":"ESLint","slug":"eslint"},{"level":2,"title":"Prettier","slug":"prettier"},{"level":2,"title":"Jest","slug":"jest"},{"level":2,"title":"마무리","slug":"마무리"}],"relativePath":"guide/web.md"}',c={},D=p('<h1 id="node-js-웹-애플리케이션" tabindex="-1">Node.js 웹 애플리케이션 <a class="header-anchor" href="#node-js-웹-애플리케이션" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">⚡️ 목표</p><p>✅ <a href="https://nodejs.org/" target="_blank" rel="noopener noreferrer">Node.js</a>와 <a href="https://www.fastify.io/" target="_blank" rel="noopener noreferrer">Fastify</a>를 이용하여 웹 애플리케이션을 만듭니다.<br> ✅ <a href="https://eslint.org/" target="_blank" rel="noopener noreferrer">ESLint</a>와 <a href="https://prettier.io/" target="_blank" rel="noopener noreferrer">Prettier</a>를 이용하여 정적 코드 분석과 포멧팅을 적용합니다.<br> ✅ <a href="https://jestjs.io/" target="_blank" rel="noopener noreferrer">Jest</a>를 이용하여 테스트 코드를 작성합니다.</p></div><p><div class="table-of-contents"><ul><li><a href="#웹-애플리케이션">웹 애플리케이션</a></li><li><a href="#eslint">ESLint</a></li><li><a href="#prettier">Prettier</a></li><li><a href="#jest">Jest</a></li><li><a href="#마무리">마무리</a></li></ul></div></p><h2 id="웹-애플리케이션" tabindex="-1">웹 애플리케이션 <a class="header-anchor" href="#웹-애플리케이션" aria-hidden="true">#</a></h2><p><code>Awesome API</code>는 <code>Fastify</code> 웹 프레임워크를 이용하여 개발 중입니다. 아직 초창기라 많은 코드를 작성하진 못했지만 <code>/</code>에 접속하면, 완벽하게 <code>{ &quot;hello&quot;: &quot;world&quot; }</code>를 출력합니다.</p><div class="language-js"><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fastify </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fastify</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">={})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fastify</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">opts</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">async</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">reply</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> hello</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> build</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div>',6),y=p('<div class="language-js"><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">logger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// Run the server!</span></span>\n<span class="line"><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exit</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div>',1),F=o("p",null,"군더더기 없는 완벽한 코드입니다!",-1),C=p('<h2 id="eslint" tabindex="-1">ESLint <a class="header-anchor" href="#eslint" aria-hidden="true">#</a></h2><p>ESLint를 설치하고 기본적인 설정을 해줍니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># ESLint 설치</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm install eslint --save-dev</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 설정파일 생성</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm init @eslint/config</span></span>\n<span class="line"></span></code></pre></div><p>ESLint는 React, Vue.js등 다양한 환경을 지원하는데 현재 개발 환경에 맞게 옵션을 선택합니다.</p><ul><li>✔ How would you like to use ESLint? · problems</li><li>✔ What type of modules does your project use? · commonjs</li><li>✔ Which framework does your project use? · none</li><li>✔ Does your project use TypeScript? · No</li><li>✔ Where does your code run? · node</li><li>✔ What format do you want your config file to be in? · JSON</li></ul><div class="warning custom-block"><p class="custom-block-title">ESLint config</p><p><code>Where does your code run?</code> 설정은 복수 응답을 허용하기 때문에 <code>space</code>를 눌러 <code>node</code>만 체크하고 엔터를 입력합니다.</p></div><p>ESLint 설정을 했으니, 스크립트를 실행할 수 있도록 <code>package.json</code>에 다음 내용을 추가합니다.</p><div class="language-json"><div class="highlight-lines"><br><br><div class="highlighted"> </div><br><br><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node src/server.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint .</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echo </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">Error: no test specified</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> &amp;&amp; exit 1</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>ESLint를 실행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># ESLint 실행</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm run lint</span></span>\n<span class="line"></span></code></pre></div><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">/Users/cs.kim/Downloads/tmp/awesome-api-server/app.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">  5:32  error  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">request</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> is defined but never used  no-unused-vars</span></span>\n<span class="line"><span style="color:#A6ACCD;">  5:41  error  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reply</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> is defined but never used    no-unused-vars</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">✖ 2 problems </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">2 errors, 0 warnings</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre></div><p><code>app.js</code>파일의 5번째 줄에 사용하지 않는 변수 2개를 발견했습니다. 변수를 제거하고 다시 <code>lint</code>를 실행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># ESLint 실행</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm run lint</span></span>\n<span class="line"></span></code></pre></div><p>🎉 성공! 경고 없이 실행되었습니다.</p><div class="tip custom-block"><p class="custom-block-title">ESLint 더보기</p><p>📔 <a href="https://eslint.org/docs/user-guide/" target="_blank" rel="noopener noreferrer">공식 문서</a><br> 📝 <a href="https://eslint.org/docs/user-guide/configuring/rules" target="_blank" rel="noopener noreferrer">규칙 설정하기</a><br> 📝 <a href="https://eslint.org/docs/user-guide/configuring/ignoring-code" target="_blank" rel="noopener noreferrer">특정 파일 검사 제외하기</a><br> 📝 <a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener noreferrer">Visual Studio Code 확장 프로그램 설치하기</a></p></div>',15),i=p('<h2 id="prettier" tabindex="-1">Prettier <a class="header-anchor" href="#prettier" aria-hidden="true">#</a></h2><p>코드 형식<sup>format</sup>을 맞춰주는 Prettier를 설치합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Prettier 설치</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm install prettier --save-dev</span></span>\n<span class="line"></span></code></pre></div><p>Prettier의 일부 규칙이 ESLint와 충돌할 수 있으니, 충돌을 방지하는 ESLint 플러그인도 추가합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># ESLint 플러그인 설치</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm install eslint-config-prettier --save-dev</span></span>\n<span class="line"></span></code></pre></div><p><code>.eslintrc</code>파일에 방금 추가한 플러그인을 설정합니다.</p><div class="language-json"><div class="highlight-lines"><div class="highlighted"> </div><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">extends</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint:recommended</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint-config-prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">, </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>스크립트를 실행할 수 있도록 <code>package.json</code>에 다음 내용을 추가합니다.</p><div class="language-json"><div class="highlight-lines"><br><br><br><div class="highlighted"> </div><br><br><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node src/server.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint .</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">src/**/*.+(js|json)</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echo </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">Error: no test specified</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> &amp;&amp; exit 1</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>Prettier를 실행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Prettier 실행</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm run format</span></span>\n<span class="line"></span></code></pre></div><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">const fastify = require</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fastify</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">build(opts</span><span style="color:#A6ACCD;"> = {}) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  const app = fastify</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">  app.get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, async </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> hello: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> }</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> app</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">module.exports = build</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">const server = require</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)(</span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  logger: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    level: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">// Run the server</span><span style="color:#89DDFF;">!</span></span>\n<span class="line"><span style="color:#A6ACCD;">server.listen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">3000, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">(err)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    server.log.error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">    process.exit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">})</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><p><code>app.js</code>파일과 <code>server.js</code>파일의 분석결과를 확인할 수 있습니다. 작은따옴표(&#39;)가 전부 큰따옴표(&quot;)로 변경되었고 마지막에 세미콜론(;)을 빼먹은 부분도 추가되었네요. 문자랑 연산자 사이에 적당한 간격이 생겼습니다.</p><p>기본 명령어는 분석만 하므로 변경된 사항을 바로 수정하도록 <code>--write</code> 옵션을 추가합니다.</p><div class="language-json"><div class="highlight-lines"><br><br><br><div class="highlighted"> </div><br><br><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node src/server.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint .</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">src/**/*.+(js|json)</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ --write 옵션 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echo </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">Error: no test specified</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> &amp;&amp; exit 1</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>다시 Prettier를 실행합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Prettier 실행</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm run format</span></span>\n<span class="line"></span></code></pre></div><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">src/app.js 12ms</span></span>\n<span class="line"><span style="color:#A6ACCD;">src/server.js 5ms</span></span>\n<span class="line"></span></code></pre></div><p>🎉 성공! 모든 파일이 규칙에 맞게 변경되었습니다. 이제 팀원들 모두 동일한 형식으로 코드를 작성할 수 있겠네요.</p><p>ESLint와 Prettie를 따로 실행하지 않고 한 번에 실행하면 좋겠죠?</p><div class="language-json"><div class="highlight-lines"><br><br><br><br><div class="highlighted"> </div><br><br><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node src/server.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint .</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">src/**/*.+(js|json)</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">validate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm run lint &amp;&amp; npm run format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echo </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">Error: no test specified</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> &amp;&amp; exit 1</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>이제 <code>npm run validate</code>로 두 가지 모두 체크할 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">Prettier 더보기</p><p>📔 <a href="https://prettier.io/docs/en/index.html" target="_blank" rel="noopener noreferrer">공식 문서</a><br> 📝 <a href="https://prettier.io/playground/" target="_blank" rel="noopener noreferrer">규칙 설정하기</a><br> 📝 <a href="https://prettier.io/docs/en/ignore.html" target="_blank" rel="noopener noreferrer">특정 파일 검사 제외하기</a><br> 📝 <a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noopener noreferrer">Visual Studio Code 확장 프로그램 설치하기</a><br> 📝 <a href="https://code.visualstudio.com/docs/getstarted/settings" target="_blank" rel="noopener noreferrer">Visual Studio Code 저장, 붙여넣기 연동하기</a></p></div><h2 id="jest" tabindex="-1">Jest <a class="header-anchor" href="#jest" aria-hidden="true">#</a></h2><p>사실 개발팀은 고민이 하나 있습니다. 지속 가능한 프로젝트의 성장을 위해선 테스트코드를 작성하라고 들었는데, 엄두가 나지 않았던 거죠. <s>시작을 못 하겠어요..</s></p>',25),A=p('<p>테스트 프레임워크 Jest를 설치합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Jest 설치</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm install jest --save-dev</span></span>\n<span class="line"></span></code></pre></div><p>Jest는 기본적으로 <code>__tests__</code> 디렉토리에 포함된 파일과 <code>*.test.js</code> 파일을 바라봅니다.</p><p><code>src/__tests__/app.js</code> 파일을 다음과 같이 작성합니다. <code>/</code>에 요청을 보냈을 때, 예상하는 값이 나오는지 확인하는 코드입니다.</p><div class="language-js"><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> build </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;/&quot; 요청시 &quot;hello: world&quot; 응답 확인</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">inject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">expect</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toEqual</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> hello</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><p>테스트를 실행하는 스크립트를 <code>package.json</code>에 추가합니다.</p><div class="language-json"><div class="highlight-lines"><br><br><br><br><div class="highlighted"> </div><br><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node src/server.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">lint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint .</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">src/**/*.+(js|json)</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">...</span></span>\n<span class="line"></span></code></pre></div><p>테스트를 실행합니다. 테스트는 npm의 배려로 간단하게 줄여서 사용할 수 있습니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># 테스트 스크립트 실행</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># npm run test / npm test / npm t 모두 가능</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm t</span></span>\n<span class="line"></span></code></pre></div><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;"> PASS  src/__tests__/app.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✓ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">60 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Test Suites: 1 passed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Tests:       1 passed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Snapshots:   0 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Time:        0.249 s, estimated 1 s</span></span>\n<span class="line"><span style="color:#A6ACCD;">Ran all </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> suites.</span></span>\n<span class="line"></span></code></pre></div><p>🎉 성공! 테스트가 문제없이 통과했습니다.</p><p>이거 정말 정상적으로 동작한 걸까요? 의심스러우니 코드 내용을 바꿔서 다시 실행해봅니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;"> FAIL  src/__tests__/app.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✕ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">58 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  ● </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    expect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">received</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.toEqual</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expected</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> // deep equality</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    - Expected  - 1</span></span>\n<span class="line"><span style="color:#A6ACCD;">    + Received  + 1</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      Object </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    -   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    +   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hey?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">       6 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     url: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">       7 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   })</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  8 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">expect(res.json</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">).toEqual</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">{ hello: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> }</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                      ^</span></span>\n<span class="line"><span style="color:#A6ACCD;">       9 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> })</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      10 </span><span style="color:#89DDFF;">|</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      at Object.</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">anonymous</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">src/__tests__/app.js:8:22</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Test Suites: 1 failed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Tests:       1 failed, 1 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Snapshots:   0 total</span></span>\n<span class="line"><span style="color:#A6ACCD;">Time:        0.286 s, estimated 1 s</span></span>\n<span class="line"><span style="color:#A6ACCD;">Ran all </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;"> suites.</span></span>\n<span class="line"></span></code></pre></div><p><code>world</code>를 <code>hey?</code>로 바꿨더니 바로 테스트가 실패하는 것을 확인할 수 있습니다.</p><p>나중에 소스코드가 변경되면 테스트 코드도 같이 변경해야 하는 걸까요? -&gt; 🙌 맞습니다! 하지만, 응답을 변경할 때마다 내용을 복사 붙여넣기 하긴 귀찮죠.</p><p>Jest에서 제공하는 <code>toMatchInlineSnapshot</code> 함수를 사용해봅니다.</p><div class="language-js"><div class="highlight-lines"><br><div class="highlighted"> </div><br></div><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// expect(res.json()).toEqual({ hello: &quot;world&quot; });  // ⇠ 기존 삭제</span></span>\n<span class="line"><span style="color:#82AAFF;">expect</span><span style="color:#A6ACCD;">(res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toMatchInlineSnapshot</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"></span></code></pre></div><p>다시 테스트를 실행하면 다음과 같이 테스트 코드가 자동으로 변경됩니다.</p><div class="language-js"><pre><code><span class="line"><span style="color:#82AAFF;">expect</span><span style="color:#A6ACCD;">(res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toMatchInlineSnapshot</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"><span style="color:#C3E88D;">  Object {</span></span>\n<span class="line"><span style="color:#C3E88D;">    &quot;hello&quot;: &quot;hey?&quot;,</span></span>\n<span class="line"><span style="color:#C3E88D;">  }</span></span>\n<span class="line"><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><p>다시 코드를 <code>hey?</code>에서 <code>world</code>로 변경하면, 테스트가 실패하고 Snapshot을 변경할지 물어봅니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;"> FAIL  src/__tests__/app.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ✕ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">62 ms</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  ● </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 응답 확인</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    expect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">received</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.toMatchInlineSnapshot</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">snapshot</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    Snapshot name: </span><span style="color:#89DDFF;">`&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> 요청시 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello: world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> 응답 확인 1</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    - Snapshot  - 1</span></span>\n<span class="line"><span style="color:#A6ACCD;">    + Received  + 1</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      Object </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    -   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hey?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    +   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">       6 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     url: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">       7 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   })</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  8 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">expect(res.json</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">).toMatchInlineSnapshot</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"><span style="color:#C3E88D;">         </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">                      ^</span></span>\n<span class="line"><span style="color:#C3E88D;">       9 </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">     Object </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#C3E88D;">      10 </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">       </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hey?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span></span>\n<span class="line"><span style="color:#C3E88D;">      11 </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">     }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C3E88D;">      at Object.</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">anonymous</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">src/__tests__/app.js:8:22</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C3E88D;"> › 1 snapshot failed.</span></span>\n<span class="line"><span style="color:#C3E88D;">Snapshot Summary</span></span>\n<span class="line"><span style="color:#C3E88D;"> › 1 snapshot failed from 1 </span><span style="color:#82AAFF;">test</span><span style="color:#C3E88D;"> suite. Inspect your code changes or run </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">npm </span><span style="color:#82AAFF;">test</span><span style="color:#C3E88D;"> -- -u</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;"> to update them.</span></span>\n<span class="line"></span></code></pre></div><p>정상적으로 변경한 것이므로 Snapshot을 업데이트합니다.</p><div class="language-sh"><pre><code><span class="line"><span style="color:#A6ACCD;">npm t -- -u</span></span>\n<span class="line"></span></code></pre></div><p>매번 복사 붙여넣기 할 필요가 없어서 편하네요. Snapshot은 API를 테스트하거나 프론트엔트 렌더링을 확인할 때 유용하게 사용할 수 있습니다.</p><p>마지막으로, ESLint에서 Jest 문법을 인식할 수 있도록 <code>.eslintrc</code>에 다음 내용을 추가합니다.</p><div class="language-json"><div class="highlight-lines"><br><br><br><br><div class="highlighted"> </div><br><br></div><pre><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">commonjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">es2021</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">jest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ⇠ 추가</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Jest 더보기</p><p>📔 <a href="https://jestjs.io/docs/getting-started" target="_blank" rel="noopener noreferrer">공식 문서</a><br> 📝 <a href="https://martinfowler.com/tags/testing.html" target="_blank" rel="noopener noreferrer">소프트웨어 테스팅 알아보기</a><br> 📝 <a href="https://jestjs.io/docs/using-matchers" target="_blank" rel="noopener noreferrer">Jest Matcher 알아보기</a></p></div><h2 id="마무리" tabindex="-1">마무리 <a class="header-anchor" href="#마무리" aria-hidden="true">#</a></h2><p>정적 코드 분석, 포멧팅, 테스트 코드는 프로젝트 초기엔 장점을 모르고 귀찮을 수 있지만, 프로젝트가 성장할수록 안정적이고 빠르게 개발할 수 있는 안전망 역할을 합니다. 막상 나중에 필요성을 깨닫고 추가하려면 테스트 코드를 추가하기 어려운 구조거나 너무 많은 수정이 필요해서 사용하기 어려울 수 있습니다. 처음부터 자연스럽게 사용할 수 있도록 의도적인 노오오오력이 필요합니다.</p><p>이제 프로젝트 기본 설정을 마쳤으니 본격적으로 협업을 위한 도구를 알아봅니다.</p>',30);var u=s(c,[["render",function(s,p,o,r,c,u){const d=e("code-link"),q=e("Chat-KakaoMsg"),h=e("Chat-KakaoRoom");return t(),n("div",null,[D,a(d,{link:"src/app.js"}),y,a(d,{link:"src/server.js"}),F,a(h,null,{default:l((()=>[a(q,{avatar:"senior",user:"촋 CTO",msg:"안녕하세요. 보내주신 코드를 봤는데..",isMe:"false"}),a(q,{msg:"네네 어떠신가요??",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"정적 코드 분석 도구를 추가하면 좋을 것 같습니다",isMe:"false"}),a(q,{msg:"앗 정적..코드 분석이 뭔가요??",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"정적 코드 분석은 소스 코드를 분석해서 애플리케이션을 실행하기 전에 문제점을 찾아주는 기능이에요",isMe:"false"}),a(q,{msg:"오타라던가 사용하지 않는 변수 등을 체크해서 잠재적인 버그를 찾을 수 있게 도와줍니다",isMe:"false"}),a(q,{msg:"와.. 비..싼가요?",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"무료에요 ㅎㅎㅎ Javascript에서 가장 많이 사용하는 ESLint를 적용해보죠",isMe:"false"})])),_:1}),C,a(h,null,{default:l((()=>[a(q,{avatar:"senior",user:"촋 CTO",msg:"이제 코드 형식을 모두 동일하게 맞춰볼까요?",isMe:"false"}),a(q,{msg:"코드 형식이라면..",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"띄어쓰기라던가 따옴표 형태, 세미콜론 사용 유무 등 사용자마다 선호하는 방식이 다른 코딩 습관을 동일한 기준에 맞춰 수정할 수 있어요",isMe:"false"}),a(q,{msg:"아하! 안 그래도 저희끼리 규칙을 정하고 있었어요!",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"규칙을 강제로 적용하고 많은 개발자가 사용하는 방식을 적용하면 도움이 되겠죠?",isMe:"false"}),a(q,{msg:"Prettier가 이쪽에선 가장 유명해요",isMe:"false"})])),_:1}),i,a(h,null,{default:l((()=>[a(q,{msg:"똑똑.. 혹시.. 테스트 코드 작성 방법을 알 수 있을까요???",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"오 테스트 코드 작성하시나요?",isMe:"false"}),a(q,{msg:"네네 작성은 하고 싶은데.. 사실 잘 모르겠어요 ㅠㅠ",isMe:"true"}),a(q,{avatar:"senior",user:"촋 CTO",msg:"소프트웨어 테스트는 단위 테스트, 통합 테스트, E2E 테스트 등 다양한 방식이 있고..",isMe:"false"}),a(q,{msg:"아! 우선 단위 테스트를 작성해보죠. 일단 한번 해보고 더 자세히 알아볼게요!",isMe:"false"}),a(q,{msg:"Javascript엔 다양한 테스트 프레임워크가 있는데 이번엔 Jest를 사용할게요. 아주 빠르고 확장성이 좋아요",isMe:"false"})])),_:1}),A])}]]);export{r as __pageData,u as default};
